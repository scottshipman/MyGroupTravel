{# No base! #}

<h2 id="edit-title-{{ entity.id }}">{{ entity.title }}</h2>

<div class="media-wrapper">

    <div class="existing-media-wrapper sortable-images">
        <div class="mdl-label-mimic"><label>{% trans %}contentBlocks.upload_form.title{% endtrans %}</label></div>
        <p>{% trans %}contentBlocks.label.terms{% endtrans %} <a href="{{ path('terms_of_service') }}" target="_blank">Terms of Use.</a></p>
        {% if entity.mediaWrapper %}
            {% for mediaWrapper in collection %}
                {% for media in mediaWrapper.media %}
                <div class="existing-media-item">
                    <div class="existing-media-item-image"><img id="{{ media.id }}" src="{{ asset(".." ~ media.getRelativePath ~ "/" ~ media.getHashedFilename ) }}" title="{{ mediaWrapper.title }}" alt="{{ mediaWrapper.title }}"></div>
                    <a class="existing-delete" href="#"><i class="fa fa-times-circle"></i></a>
                    <div style="display: none" class="caption-textfield mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                        <input class="caption mdl-textfield__input" type="text" data="{{ mediaWrapper.id }}" value="{{ mediaWrapper.title }}" name="caption" id="{{ mediaWrapper.id }}-caption">
                        <label class="mdl-textfield__label" for="{{ mediaWrapper.id }}">{% trans %}contentBlocks.upload_form.caption_label{% endtrans %}</label></div>
                    <div id="{{ mediaWrapper.id }}-label" style="display: none" class="caption-label mdl-textfield mdl-js-textfield mdl-textfield--floating-label"></div>
                </div>
                {% endfor %}
            {% endfor %}
        {% else %}
            <p class="none">{% trans %}contentBlocks.upload_form.no_images{% endtrans %}</p>
        {% endif %}
    </div>

    <div class="new-media-wrapper">

        <div class="mdl-label-mimic"><label>{% trans %}contentBlocks.upload_form.new{% endtrans %}</label></div>

        <div id="avatar-label">
            <div style="display: none;" id="dropzone-form-close"><i class="fa fa-times-circle"></i></div>
        </div>

        {{ render(controller('MediaBundle:Media:createDropzoneLightForm', {'context':'contentblock'})) }}

        <div id="user_media">
            <span class="media-placeholder-image new">
                <i class="fa fa-picture-o fa-3x"></i>
                <span>{% trans %}contentBlocks.actions.upload{% endtrans %}</span>
            </span>
        </div>

    </div>

</div>

{{ form_start(edit_form) }}
{{ form_widget(edit_form) }}
{{ form_end(edit_form) }}

<script>
    // Wait for the DOM to be loaded
    $(document).ready(function() {
        // Add a cancel button
        $('.ajax_contentblocks_form').find('.button-row').append('<a href="#" id="cancel-reload" class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored">{% trans %}contentBlocks.actions.cancel{% endtrans %}</a>');

        // Change the h2's title when editing the title
        $('#tui_toolkit_contentblocksbundle_contentblock_title').on( 'blur change paste keyup input', function() {
            $('#edit-title-{{ entity.id }}').html( $(this).val() );
        });

        // Do stuff w/ cancel button
        $(document).on('click', '#cancel-reload', function (e) {
            e.preventDefault();
            if ( $('.mode-toggle').hasClass('mode-edit') ) { // If on preview page
                $("#loader").css("display", "block");
                var blockID = {{ entity.id }};
                var objectID = $('.mode-toggle').attr('entityId');
                if ($("main").hasClass("Tour"))
                {
                    var classtype = "Tour";
                }
                else {
                    var classtype = "QuoteVersion";
                }
                if($(this).closest('form').attr('id')=='ajax_headerblock_layout_form'){ //header slideshow content block
                    $('#site-header-slideshow-content').load('/manage/headerblock/header/show/' + blockID, function () {
                        $('#site-header-editForm').empty();
                        $('#site-header-editForm').hide();
                        $('#site-header-slideshow').show();
                        $('.item-edit').show();
                        $('.flexslider').flexslider({
                            directionNav: false,
                            controlNav: false,
                            smoothHeight: true
                        });
                        $('.add-content-block').show(); // re-show ALL Add Block's for all tabs
                        $("#loader").css("display", "none");
                        $('.noembed-meta-info').remove();
                    });
                } else { // regular content block
                    var editBlock = $("#editable-content-blocks-" + blockID);
                    var previewBlock = $("#previewable-content-blocks-" + blockID);
                    // Match routing path "/manage/contentblocks/{id}/show/{objectID}/{class}"
                    //TODO path below cannot hardcode QuoteVersion - must be able to accept any Class type
                    previewBlock.load('/manage/contentblocks/' + blockID + '/show/' + objectID + '/' + classtype, function () {
                        $('.item-edit').show(); // re-show ALL edit buttons for all content blocks
                        $('.add-content-block').show(); // re-show ALL Add Block's for all tabs
                        editBlock.html('');
                        $("#loader").css("display", "none");
                        $('.noembed-meta-info').remove();
                    });
                }
            } else { // on Quoteversion Edit/Show page
                var blockId = {{ entity.id }};
                var editBlock = $("#editable-content-blocks-" + blockId);
                var previewBlock = $('#content-blocks-' + blockId);
                editBlock.html('');
                editBlock.hide();
                previewBlock.show();
                $('.content-block-actions').show();
                $("#loader").css("display", "block");
                $('.noembed-meta-info').remove();
                window.location.reload(true);


            }
        });

        // Bind form and provide a simple callback function
        $('#ajax_contentblocks_form').ajaxForm({
            beforeSerialize: function() {
                if (typeof CKEDITOR !== 'undefined') {
                    CKEDITOR.instances.tui_toolkit_contentblocksbundle_contentblock_body.updateElement();
                }
                $("#loader").css("display", "block");
                if ( !$('.mode-toggle').hasClass('mode-edit') ) { // If not on preview page
                    $('#dialog').dialog("close");
                }
            },
            success: function(response) {
                if ( $('.mode-toggle').hasClass('mode-edit') ) { // If on preview page
                    var blockId = {{ entity.id }};
                    var entityId = $('.site-show').attr('entityId');
                    var entityClass = $('.site-show').attr('entityClass');
                    var editBlock = $("#editable-content-blocks-" + blockId);
                    var previewBlock = $("#previewable-content-blocks-" + blockId);
                    // Match routing path "/manage/contentblocks/{id}/show/{quoteVersion}/{class}"
                    previewBlock.load('/manage/contentblocks/' + blockId + '/show/' + entityId + '/' + entityClass, function() {
                        $("#loader").css("display", "none");
                        $('.item-edit').show(); // re-show ALL edit buttons for all content blocks
                        $('.add-content-block').show() // re-show ALL Add Block's for all tabs
                        $('#content-blocks-' + blockId).removeClass('site-content-blocks-size-full site-content-blocks-size-half');
                        if ( $('#tui_toolkit_contentblocksbundle_contentblock_doubleWidth').is(':checked') ) {
                            $('#content-blocks-' + blockId).addClass('site-content-blocks-size-full');
                        } else {
                            $('#content-blocks-' + blockId).addClass('site-content-blocks-size-half');
                        };
                        editBlock.html('');
                        $('.flexslider').flexslider({
                            directionNav: false,
                            controlNav: false,
                            smoothHeight: true
                        });
                        $('.noembed-meta-info').remove();
                    });
                } else {
                    window.location.hash = 'site-content';
                    window.location.reload(true);
                }
            }
        })
    });
</script>

<script>
    $(document).on('click', '.existing-delete', function (e) {
        e.preventDefault();
        $(this).parent().remove();
        updateMediaWrapper($(".existing-media-wrapper"));
    });

    //Get the caption and weight fields and push them to the associative array
    $(document).on('change', 'input', function() {
        updateMediaWrapper($(".existing-media-wrapper"));
    });


    //Sortable images for content blocks
    $(".sortable-images").sortable({
        containment: "parent",
        items: "> div.existing-media-item",
        // handle: ".move",
        tolerance: "pointer",
        cursor: "move",
        opacity: 0.7,
        revert: 300,
        delay: 150,
        dropOnEmpty: true,
//        placeholder: "tabs-placeholder",
        start: function (e, ui) {
            ui.placeholder.height(ui.helper.outerHeight());
        },
        stop: function (e, ui) {
            updateMediaWrapper($(".existing-media-wrapper"));
        },
        axis: 'x,y'

    });

    // Dropzone.autoDiscover = false;

    $('#dropzone_form').dropzone({
        maxFiles: 1,
        acceptedMimeTypes: 'image/jpeg,image/png,image/jpg',
        uploadMultiple: false,
        init: function () {
            var value = $(".media-placeholder").val();
            var values = [];
            if ( value != 0 ) {
                $(".caption-textfield").css({"display":"block"});
                $(".caption-label").css({"display":"block"});
                $(".sortable-images").sortable("enable");
                updateMediaWrapper($(".existing-media-wrapper"));
                if (values.length >= 15) {
                    $(".new-media-wrapper").css({"display": "none"});
                }
            }
            this.on("success", function (file, response) {
                $('.existing-media-wrapper').find('.none').hide();
                $('.existing-media-wrapper').append('<div class="existing-media-item"><div class="existing-media-item-image"><img id="' + response.id + '" src="' + response.relativepath + '/' + response.filename + '"></div>' +
                '<a class="existing-delete" href="#"><i class="fa fa-times-circle"></i></a>' +
                '<div id="'+ response.id +'"class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">' +
                '<input class="caption mdl-textfield__input" type="text" data="'+ response.id +'" name="caption" id="'+ response.id + '-caption">' +
                '<label class="mdl-textfield__label" for="'+ response.id + '">{% trans %}contentBlocks.upload_form.caption_label{% endtrans %}</label></div>' +
                '<div id="'+ response.id +'"class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">' +
                '</div></div>');
                $('.mdl-textfield').css({'display': 'block'});
                updateMediaWrapper($(".existing-media-wrapper"));
            });
            this.on("complete", function (file, response) {
                this.removeFile(file);
            });
            this.on("error", function (file, response) {
                console.log('Error: ' + response);
            });
        }
    });
</script>
