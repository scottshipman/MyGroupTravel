{#{% if 'en_GB' in locale %} {% set format = 'd M Y' %} {% else %} {% set format = 'M d Y' %} {% endif %}#}

<div class="tour-edit mdl-card mdl-shadow--2dp">

    <div class="mdl-card__title">
        <h3 class="mdl-card__title-text">{% trans %}tour.not_setup.get_started{% endtrans %}</h3>
    </div>

    <div class="mdl-card__supporting-text mdl-card--border" style="color:grey;">
        <i class="fa fa-check" style="color:{{ brand.secondaryColor }};"></i> {% trans %}tour.not_setup.signup{% endtrans %}
    </div>

    <div class="mdl-card__supporting-text mdl-card--border">
        {{ form_start(setup_form) }}
        <i class="fa fa-credit-card "></i> {% trans %}tour.not_setup.payment_settings{% endtrans %}
        <ol class="setup-form-list">
            <li>
                <strong>{% trans %}tour.not_setup.how_much{% endtrans %}</strong>
                <p>{% trans %}tour.not_setup.pass_price{% endtrans %}</p>
                <div class="price-per-person">
                    {{ form_widget(setup_form.pricePersonPublic) }}
                </div>
                <div class="price-per-person-suffix">
                    <p> x </p><p id="passengers">{{ entity.payingPlaces }}</p>
                    <p> = </p>{% if entity.currency %}<p id="currency">{{ entity.currency.htmlSymbol | raw }}</p>{% endif %}
                    <p id="adjusted-price">{{ entity.payingPlaces * entity|price }}</p>
                    {# @TODO What is this and is it still needed? (All inline style display none) #}
                    <p style="display:none; font-size: 16px;" id="total">{{ entity.payingPlaces * entity|price }}</p>
                    {% if entity.currency %}<p id="currency" style="display: none">{{ entity.currency.htmlSymbol | raw }}</p>{% endif %}
                </div>
            </li>

            <li>
                <strong>{% trans %}tour.not_setup.amounts_and_dates{% endtrans %}</strong>
                <p>{{ "tour.not_setup.suggested_price" | trans({'brand' : brand.name}) }}</p>
                <div style="margin-bottom: 20px" class="paymenttasks" data-prototype="{{ form_widget(setup_form.paymentTasksPassenger.vars.prototype)|e }}">
                {# iterate over each existing paymenttask and render its  fields:  #}
                    {% for paymentTaskPassenger in setup_form.paymentTasksPassenger %}
                        <ul class="payment_task" taskid = "{{ paymentTaskPassenger.vars.value.id }}">
                            <li>{{ form_widget(paymentTaskPassenger.name) }}</li>
                            <li>{{ form_widget(paymentTaskPassenger.value) }}</li>
                            <li>{{ form_widget(paymentTaskPassenger.dueDate) }}</li>
                        </ul>
                    {% endfor %}
                </div>
            </li>
            <li>
                <strong>{% trans %}tour.not_setup.how_to_pay{% endtrans %}</strong>
                <p>{% trans %}tour.not_setup.preferred_payment{% endtrans %}</p>
                <div class="payment-types">
                    {{ form_widget(setup_form.cashPayment, {'label' : 'tour.form.tour_setup.cash'|trans}) }}
                    {{ form_widget(setup_form.cashPaymentDescription) }}
                    {{ form_widget(setup_form.bankTransferPayment, {'label' : 'tour.form.tour_setup.bank'|trans}) }}
                    {{ form_widget(setup_form.bankTransferPaymentDescription) }}
                    {{ form_widget(setup_form.onlinePayment, {'label' : 'tour.form.tour_setup.online'|trans}) }}
                    {{ form_widget(setup_form.onlinePaymentDescription) }}
                    {{ form_widget(setup_form.otherPayment, {'label' : 'tour.form.tour_setup.other'|trans}) }}
                    {{ form_widget(setup_form.otherPaymentDescription) }}
                </div>
            </li>
        </ol>
        {{ form_rest(setup_form) }}
        {{ form_end(setup_form) }}
        {{ form_javascript(setup_form) }}
    </div>

    <div class="mdl-card__supporting-text mdl-card--border" style="color: grey;">
        <p style="margin: 0; font-size: inherit;">{% trans %}tour.not_setup.next{% endtrans %}</p>
    </div>

    <div class="mdl-card__supporting-text mdl-card--border" style="color: grey;">
        <i class="fa fa-clone"></i>{% trans %}tour.not_setup.personalize{% endtrans %}
    </div>

    <div class="mdl-card__supporting-text mdl-card--border" style="color: grey;">
        <i class="fa fa-share"></i> {% trans %}tour.not_setup.promote{% endtrans %}
    </div>

</div>

<script>
    var $collectionHolder;

    // setup an "add a tag" link
    var $addPaymentTaskLink = $('<a href="#" class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored add_tag_link" title="{% trans %}tour.form.tour.add_payment{% endtrans %}"><i class="fa fa-plus"></i>{% trans %}tour.form.tour.add_payment{% endtrans %}</a>');
    var $newLinkDiv = $('<div></div>').append($addPaymentTaskLink);

    $( document ).ready(function() {

        //To expose the payment type description fields if there is already a value there
        $('.mdl-checkbox').each( function() {
            if ($(this).next().children(":first").val().length > 0) {
                $(this).next().css({"display": "inline-block"});
            }

        });

        //toggle showing and hiding text fields based on input
        $('.mdl-checkbox').on( 'change', 'input:checkbox', function() {

            if ($(this).parent().hasClass("is-checked")) {
                $(this).parent().next().css({"display": "inline-block"});

            }else if (!$(this).parent().hasClass("is-checked")){
                $(this).parent().next().css({"display": "none"});
                $(this).parent().next().children(":first").val('');

            }

        });
        

        $( ".hasDatepicker" ).datepicker( "option", "dateFormat", "{{ date_format }}" );
        $( ".hasDatepicker" ).change(function(){
            $(this).parent().addClass('is-dirty');
        });

        // Get the div that holds the collection of payments
        $collectionHolder = $('div.paymenttasks');

        // add a delete link to all of the existing payment form ul elements
        $collectionHolder.find('ul.payment_task').each(function() {
            addPaymentTaskFormDeleteLink($(this), 'li');
        });

        // add the "add a Payment" anchor and li to the Payment div
        $collectionHolder.append($newLinkDiv);

        // count the current form inputs we have (e.g. 2), use that as the new
        // index when inserting a new item (e.g. 2)
        $collectionHolder.data('index', $collectionHolder.find('ul').length);

        $addPaymentTaskLink.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // add a new tag form (see next code block)
            addPaymentTaskForm($collectionHolder, $newLinkDiv);
        });


        //Bind the tour settings ajax form
        $('#ajax_tour_setup_form').on('submit', function(e) {
            $("#loader").css("display", "block");
            e.preventDefault();
            $('.errors').remove();
            $data = $('#ajax_tour_setup_form').serialize();
            var formAction = $(this).attr('action');
            var form =$(this);
            $.ajax({
                url: formAction,
                type: 'POST',
                headers: {
                    "Pragma": "no-cache",
                    "Expires": -1,
                    "Cache-Control": "no-cache"
                },
                data: $data,
                contentType: "application/x-www-form-urlencoded",
            }).success(function (response) {
                window.location.reload(true);
            }).error(function (response) {
                $("#loader").hide();
                var parsed = $.parseJSON(response.responseText);
                $.each(parsed, function(i, item) {
                    field= '#tui_toolkit_tourbundle_toursetup_' + i;
                    $(field).parent().after('<p class="errors" style="color:red;">'+ item + '</p>');
                });
            });
        });


    });
    function addPaymentTaskForm($collectionHolder, $newLinkDiv) {
        // Get the data-prototype explained earlier
        var prototype = $collectionHolder.data('prototype');

        // get the new index
        var index = $collectionHolder.data('index');

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on how many items we have
        var newForm = prototype.replace(/__name__/g, index);

        // increase the index with one for the next item
        $collectionHolder.data('index', index + 1);

        // Display the form in the page in an div, before the "Add a Payment" link div
        var $newFormDiv = $('<div class="new_payment_task" task="' + index + '"></div>').append(newForm);
        $newLinkDiv.before($newFormDiv);

        // add a delete link to the new form
        addPaymentTaskFormDeleteLink($newFormDiv, 'div');

        //trigger date field popup
        $("input[id*='_dueDate']").each(function() {
            var $configs = $.extend({
                minDate: new Date(2010, 0, 1),
                maxDate: new Date(2030, 11, 31)
            }, $.datepicker.regional['{{ locale }}'] ,{"dateFormat":"{{ date_format }}"});
            $(this).datepicker($configs);
        });
        $( ".hasDatepicker" ).datepicker( "option", "dateFormat", "{{ date_format }}" );
        $( ".hasDatepicker" ).change(function(){
            $(this).parent().addClass('is-dirty');
        });
        doMDLpopup($newFormDiv);
    }

    function addPaymentTaskFormDeleteLink($paymentFormDiv, elem) {
        var $removeFormA;
        if (elem=='li'){
            $removeFormA = $('<li><a href="#" title="Delete this Payment"><i class="fa fam-delete"></i></a></li>');
            $paymentFormDiv.append($removeFormA);
        } else {
            $removeFormA = $('<div class="form-row"><a href="#" title="Delete this Payment"><i class="fa fam-delete"></i></a></div>');
            var hidden = $paymentFormDiv.find('input[type="hidden"]');
            $paymentFormDiv.children().first().append($removeFormA);
        }

        $removeFormA.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();
            if ($paymentFormDiv.get(0).tagName =='UL') {
                if (confirm('Are you sure you want to remove this payment? You must click Update for changes to be saved.')) {

                }
            } else {
                $paymentFormDiv.remove();
            }
        });
    }

</script>


